{"version":3,"sources":["components/Movie.js","components/Search.js","components/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["Movie","movie","poster","Poster","className","Title","width","alt","src","Year","Search","props","useState","searchValue","setSearchValue","value","onChange","e","target","type","onClick","preventDefault","search","Header","text","starting","loading","movies","errorMessage","reducer","state","action","payload","error","App","useReducer","dispatch","useEffect","fetch","then","response","json","jsonResponse","Response","Error","map","index","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAqBeA,EAfD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACTC,EACa,QAAjBD,EAAME,OALR,8EAKyCF,EAAME,OAC/C,OACE,sBAAKC,UAAU,QAAf,UACE,6BAAKH,EAAMI,QACX,8BACE,qBAAKC,MAAM,MAAMC,IAAG,4BAAuBN,EAAMI,OAASG,IAAKN,MAEjE,gDAAmBD,EAAMQ,YCiBhBC,EA7BA,SAACC,GACd,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAgBA,OACI,uBAAMV,UAAU,SAAhB,UACE,uBACEW,MAAOF,EACPG,SAlByB,SAACC,GAChCH,EAAeG,EAAEC,OAAOH,QAkBlBI,KAAK,SAEP,uBAAOC,QAbI,SAACH,GAChBA,EAAEI,iBACFV,EAAMW,OAAOT,GALbC,EAAe,KAgBeK,KAAK,SAASJ,MAAM,eCjBvCQ,EARA,SAACZ,GACd,OACE,wBAAQP,UAAU,aAAlB,SACE,6BAAKO,EAAMa,UCgEXC,EAAW,CACfC,SAAS,EACTC,OAAQ,GACRC,aAAc,MAIVC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOZ,MACb,IAAK,wBACH,OAAO,2BACFW,GADL,IAEEJ,SAAS,EACTE,aAAc,OAElB,IAAK,wBACH,OAAO,2BACFE,GADL,IAEEJ,SAAS,EACTC,OAAQI,EAAOC,UAEnB,IAAK,wBACH,OAAO,2BACFF,GADL,IAEEJ,SAAS,EACTE,aAAcG,EAAOE,QAEzB,QACE,OAAOH,IAQEI,EAhGH,WACV,MAA0BC,qBAAWN,EAASJ,GAA9C,mBAAOK,EAAP,KAAcM,EAAd,KAEEC,qBAAU,WAENC,MAAM,kDACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAENN,EAAS,CACLjB,KAAM,wBACNa,QAASU,EAAahC,cAGhC,IAEF,IAsBQiB,EAAkCG,EAAlCH,OAAQC,EAA0BE,EAA1BF,aAAcF,EAAYI,EAAZJ,QAE9B,OACA,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQoB,KAAK,aACb,cAAC,EAAD,CAAQF,OA3BK,SAAAT,GACduB,EAAS,CACPjB,KAAM,0BAGLmB,MAAM,8BAAD,OAA+BzB,EAA/B,qBACL0B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAC0B,SAA1BA,EAAaC,SACfP,EAAS,CACJjB,KAAM,wBACNa,QAASU,EAAahC,SAG3B0B,EAAS,CACJjB,KAAM,wBACNc,MAAOS,EAAaE,cAY9B,mBAAGxC,UAAU,YAAb,yCACA,qBAAKA,UAAU,SAAf,SACGsB,IAAYE,EACX,+CACEA,EACF,qBAAKxB,UAAU,eAAf,SAA+BwB,IAE/BD,EAAOkB,KAAI,SAAC5C,EAAO6C,GAAR,OACT,cAAC,EAAD,CAAuC7C,MAAOA,GAA9C,UAAe6C,EAAf,YAAwB7C,EAAMI,iBCjD3B0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2862b5a7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst PLACEHOLDER =\r\n  \"https://orstx.org/wp-content/uploads/2019/10/no-photo-available-icon-12.jpg\";\r\n\r\n\r\nconst Movie = ({ movie }) => {\r\n  const poster =\r\n    movie.Poster === \"N/A\" ? PLACEHOLDER : movie.Poster;\r\n  return (\r\n    <div className=\"movie\">\r\n      <h2>{movie.Title}</h2>\r\n      <div>\r\n        <img width=\"150\" alt={`The movie titled: ${movie.Title}`} src={poster}/>\r\n      </div>\r\n      <h3>Release Year: {movie.Year}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Movie;","import React, { useState } from \"react\";\r\n\r\n\r\nconst Search = (props) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  \r\n  const handleSearchInputChanges = (e) => {\r\n    setSearchValue(e.target.value);\r\n  }\r\n\r\n  const resetInputField = () => {\r\n    setSearchValue(\"\")\r\n  }\r\n\r\n  const doSearch = (e) => {\r\n    e.preventDefault();\r\n    props.search(searchValue);\r\n    resetInputField();\r\n  }\r\n\r\n  return (\r\n      <form className=\"search\">\r\n        <input\r\n          value={searchValue}\r\n          onChange={handleSearchInputChanges}\r\n          type=\"text\"\r\n        />\r\n        <input onClick={doSearch} type=\"submit\" value=\"SEARCH\" />\r\n      </form>\r\n    );\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header className=\"App-header\">\r\n      <h2>{props.text}</h2>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { useReducer, useEffect } from \"react\";\nimport \"../App.css\";\nimport Movie from \"./Movie\";\nimport Search from \"./Search\";\nimport Header from \"./Header\";\n\n\n \n\nconst App = () => {\n  const [state, dispatch] = useReducer(reducer, starting);\n\n    useEffect(() => {\n    \n        fetch(\"https://www.omdbapi.com/?s=man&apikey=ff4e2143\")\n            .then(response => response.json())\n            .then(jsonResponse => {\n        \n            dispatch({\n                type: \"SEARCH_MOVIES_SUCCESS\",\n                payload: jsonResponse.Search\n        \t});\n      \t});\n  \t}, []);\n\n    const search = searchValue => {\n    \tdispatch({\n      \ttype: \"SEARCH_MOVIES_REQUEST\"\n    \t});\n\t\n        fetch(`https://www.omdbapi.com/?s=${searchValue}&apikey=4a3b711b`)\n      \t.then(response => response.json())\n      \t.then(jsonResponse => {\n        \tif (jsonResponse.Response === \"True\") {\n          \tdispatch({\n                type: \"SEARCH_MOVIES_SUCCESS\",\n                payload: jsonResponse.Search\n          \t});\n        \t} else {\n          \tdispatch({\n                type: \"SEARCH_MOVIES_FAILURE\",\n                error: jsonResponse.Error\n          \t});\n          }\n      \t});\n\t  };\n\n    const { movies, errorMessage, loading } = state;\n\n    return (\n    <div className=\"App\">\n      <Header text=\"Film App\" />\n      <Search search={search} />\n      <p className=\"App-intro\">Search for different Movies</p>\n      <div className=\"movies\">\n        {loading && !errorMessage ? (\n          <span>loading... </span>\n        ) : errorMessage ? (\n          <div className=\"errorMessage\">{errorMessage}</div>\n        ) : (\n          movies.map((movie, index) => (\n            <Movie key={`${index}-${movie.Title}`} movie={movie} />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst starting = {\n  loading: true,\n  movies: [],\n  errorMessage: null\n};\n\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SEARCH_MOVIES_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        errorMessage: null\n      };\n    case \"SEARCH_MOVIES_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        movies: action.payload\n      };\n    case \"SEARCH_MOVIES_FAILURE\":\n      return {\n        ...state,\n        loading: false,\n        errorMessage: action.error\n      };\n    default:\n      return state;\n  }\n};\n\n\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}